//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.1.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace com.hb3344.ademco {

public class ademco_packet_t : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ademco_packet_t(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ademco_packet_t obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(ademco_packet_t obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~ademco_packet_t() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libademcoPINVOKE.delete_ademco_packet_t(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public ushort crc {
    set {
      libademcoPINVOKE.ademco_packet_t_crc_set(swigCPtr, value);
    } 
    get {
      ushort ret = libademcoPINVOKE.ademco_packet_t_crc_get(swigCPtr);
      return ret;
    } 
  }

  public uint len {
    set {
      libademcoPINVOKE.ademco_packet_t_len_set(swigCPtr, value);
    } 
    get {
      uint ret = libademcoPINVOKE.ademco_packet_t_len_get(swigCPtr);
      return ret;
    } 
  }

  public ademco_packet_id_t id {
    set {
      libademcoPINVOKE.ademco_packet_t_id_set(swigCPtr, (int)value);
    } 
    get {
      ademco_packet_id_t ret = (ademco_packet_id_t)libademcoPINVOKE.ademco_packet_t_id_get(swigCPtr);
      return ret;
    } 
  }

  public ushort seq {
    set {
      libademcoPINVOKE.ademco_packet_t_seq_set(swigCPtr, value);
    } 
    get {
      ushort ret = libademcoPINVOKE.ademco_packet_t_seq_get(swigCPtr);
      return ret;
    } 
  }

  public string acct {
    set {
      libademcoPINVOKE.ademco_packet_t_acct_set(swigCPtr, value);
    } 
    get {
      string ret = libademcoPINVOKE.ademco_packet_t_acct_get(swigCPtr);
      return ret;
    } 
  }

  public ademco_data_t data {
    set {
      libademcoPINVOKE.ademco_packet_t_data_set(swigCPtr, ademco_data_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = libademcoPINVOKE.ademco_packet_t_data_get(swigCPtr);
      ademco_data_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ademco_data_t(cPtr, false);
      return ret;
    } 
  }

  public ademco_xdata_t xdata {
    set {
      libademcoPINVOKE.ademco_packet_t_xdata_set(swigCPtr, ademco_xdata_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = libademcoPINVOKE.ademco_packet_t_xdata_get(swigCPtr);
      ademco_xdata_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ademco_xdata_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_time_t timestamp {
    set {
      libademcoPINVOKE.ademco_packet_t_timestamp_set(swigCPtr, SWIGTYPE_p_time_t.getCPtr(value));
      if (libademcoPINVOKE.SWIGPendingException.Pending) throw libademcoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_time_t ret = new SWIGTYPE_p_time_t(libademcoPINVOKE.ademco_packet_t_timestamp_get(swigCPtr), true);
      if (libademcoPINVOKE.SWIGPendingException.Pending) throw libademcoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char raw {
    set {
      libademcoPINVOKE.ademco_packet_t_raw_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = libademcoPINVOKE.ademco_packet_t_raw_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public uint raw_len {
    set {
      libademcoPINVOKE.ademco_packet_t_raw_len_set(swigCPtr, value);
    } 
    get {
      uint ret = libademcoPINVOKE.ademco_packet_t_raw_len_get(swigCPtr);
      return ret;
    } 
  }

  public ademco_packet_t() : this(libademcoPINVOKE.new_ademco_packet_t(), true) {
  }

}

}
